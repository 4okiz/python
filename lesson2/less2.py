"""1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
а указать явно, в программе."""

_list = [1, 1.1, '1', (1, 1), [1, 1], None, True, {1, 2}, {"1": 1}]
for _ in _list:
    print(f'{_} - {type(_)}')


"""2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы
с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input()."""

_list = []
list_input = None
count = 1
while list_input != '':
    list_input = input(f'Введите {count}-e значение\n')
    if list_input != '':
        _list.append(list_input)
    count += 1
print(_list)
j = 0
for i in range(int(len(_list)/2)):
  _list[j], _list[j+1] = _list[j+1], _list[j]
  j += 2
print(_list)


'''3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
(зима, весна, лето, осень). Напишите решения через list и через dict.'''

lst = ["Зима", "Весна", "Лето", "Осень"]
month = input('Введите номер месяца:\n')
if month == '1' or month == '2' or month == '12':
    print(f'Это {lst[0]}')
elif month == '3' or month == '4' or month == '5':
    print(f'Это {lst[1]}')
elif month == '6' or month == '7' or month == '8':
    print(f'Это {lst[2]}')
elif month == '9' or month == '10' or month == '11':
    print(f'Это {lst[0]}')


dct = {
    'Зима': ['1', '2', '12'],
    "Весна": ['3', '4', '5'],
    "Лето": ['6', '7', '8'],
    "Осень": ['9', '10', '11']
}
for m in dct:
    if month in dct[m]:
        print(f'Это {m}')


'''4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.'''

string = input()
string = string.split()
for j, word in enumerate(string, 1):
    print(j, word[:10])


'''5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].'''

my_list = [7, 5, 3, 3, 2]
for i in range(3):
    rating = int(input())
    my_list.append(rating)
my_list.sort(reverse=True)
print(my_list)


'''6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара
и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}'''


# lst = [
# (1, {'название': 'компьютер', 'цена': 20000, 'количество': 5, 'ед': 'шт.'}),
# (2, {'название': 'принтер', 'цена': 6000, 'количество': 2, 'ед': 'шт.'}),
# (3, {'название': 'сканер', 'цена': 2000, 'количество': 7, 'ед': 'шт.'})
# ]


lst = []
req = None
count = 1
while True:
    quest = input(f'Хотите добавить еще один товар? (да/нет)\n')
    if quest.lower() == 'нет':
        break
    dct = {
        'название': None,
        "цена": None,
        "количество": None,
        "ед": None
    }

    for i in dct:
        req = input(f'Введите {i}:\n')
        if req != 'стоп':
            dct[i] = req
        else:
            break
    if req != 'стоп':
        lst.append((count, dct))

    count += 1
print(lst)

title = []
price = []
quantity = []
unit = []


for pos in lst:
    title.append(pos[1]['название'])
    price.append(pos[1]['цена'])
    quantity.append(pos[1]['количество'])
    unit.append(pos[1]['ед'])


# unit = list(set(unit))

new_dct = {
    'название': title,
    "цена": price,
    "количество": quantity,
    "ед": unit
}

print(new_dct)