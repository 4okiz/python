'''1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать
у пользователя, предусмотреть обработку ситуации деления на ноль.'''


def division(num1, num2):
    try:
        return num1 / num2
    except ZeroDivisionError:
        return 'На ноль делить нельзя'


number1 = float(input('Введите первое число\n'))
number2 = float(input('Введите второе число\n'))

print(division(number1, number2))

'''2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, 
город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Реализовать вывод 
данных о пользователе одной строкой.'''


def profile(f_name, l_name, year, city, email, tel):
    return f'{l_name} {f_name}, {year}, {city}, {email}, {tel}'

print(profile(f_name='Петр', l_name="Петров", year="1995", city="Москва", email="mail@mail.ru", tel='79998887766'))


'''3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших 
двух аргументов.'''


def my_func(a, b, c):
    z = [a, b, c]
    z.remove(min(a, b, c))
    return sum(z)

print(my_func(15,7,10))

'''4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить 
возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания 
необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.'''


def exp(num1, num2):
    return num1 ** num2


def exp2(num1, num2):
    n = num1
    for i in range(abs(num2 -1)):
        num1 = num1 / n
    return num1


print(exp(5, -3))
print(exp2(5, -3))
'''5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться 
сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ,
выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить 
сумму этих чисел к полученной ранее сумме и после этого завершить программу.'''


check = True
list_num = []


# Спецсимвол - @
while check:
    num = input()
    lst_num = num.split()
    for i in lst_num:
        if i == '@':
            check = False
            break
        else:
            list_num.append(int(i))

print(sum(list_num))

'''6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной 
первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово 
должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().'''


def int_func(text):
    return text.title()

print(int_func('tExT teXt'))